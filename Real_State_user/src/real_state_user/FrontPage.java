/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/
package Real_State_user;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Nibraz Khan
 */
public class FrontPage extends javax.swing.JFrame {
    
    /**
     * Creates new form UserFrontPage
     */
    String userID=null;
    String userName=null;
    Connection con=null;
    PreparedStatement pst=null;
    Statement st=null;
    ResultSet rst=null;
    public FrontPage() throws SQLException {
        initComponents();
        typeT.add("buy");
        typeT.add("rent");
        ptypeT.add("Post Advertisement");
        ptypeT.add("Update Information");
        ptypeT.add("Remove Advertisement");
        adT.setVisible(false);
        adnT.setVisible(false);
        fetch();
    }
    public FrontPage(String user,String userid) throws SQLException{
        this();
        userID=userid;
        userName=user;
        userT.setText(user);//set in the upper right corner's username
        useriT.setText(userid);//set in the upper right corner's userID
        fetch();
    }
    public void fetch() throws SQLException{//fetching the datas
        try{
            con=Real_State_user.dbConnection();
            String q="select p_id, location, price, size from property where status!=\"Sold\" AND status!=\"In rent\"";
            pst= con.prepareStatement(q);
            rst=pst.executeQuery();
            pTable.setModel(DbUtils.resultSetToTableModel(rst));//add result to table
            if(userID!=null){
                q="select Advertisement_id,a.p_id,location,size,price from advertisement a INNER JOIN property p on a.p_id = p.p_id where User_id=\""+userID+"\"";//for populating advertisement table matching the user ids.
                pst= con.prepareStatement(q);
                rst=pst.executeQuery();
                adTable.setModel(DbUtils.resultSetToTableModel(rst));
            }
            
        }
        catch(ClassNotFoundException | SQLException e){
            JOptionPane.showMessageDialog(null,e);
        }finally{
            rst.close();
            pst.close();
            con.close();
            
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        useriT = new java.awt.Label();
        userT = new java.awt.Label();
        jScrollPane3 = new javax.swing.JScrollPane();
        adTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        pidTT = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        usernameT = new javax.swing.JTextField();
        ccnT = new javax.swing.JTextField();
        pidT = new javax.swing.JTextField();
        pinT = new javax.swing.JPasswordField();
        passwordT = new javax.swing.JPasswordField();
        bookT = new javax.swing.JButton();
        typeT = new java.awt.Choice();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        pTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        locT = new javax.swing.JLabel();
        prT = new javax.swing.JLabel();
        adT = new javax.swing.JLabel();
        locationT = new javax.swing.JTextField();
        sizeT = new javax.swing.JTextField();
        priceT = new javax.swing.JTextField();
        processT = new javax.swing.JButton();
        ptypeT = new java.awt.Choice();
        szT = new javax.swing.JLabel();
        adnT = new javax.swing.JTextField();
        frentT = new javax.swing.JCheckBox();
        fsoldT = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Username:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("User id:");

        useriT.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        useriT.setText("label1");

        userT.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        userT.setText("label1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(useriT, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                    .addComponent(userT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(171, 171, 171))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(userT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(useriT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        adTable.setAutoCreateRowSorter(true);
        adTable.setBackground(new java.awt.Color(255, 255, 204));
        adTable.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        adTable.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        adTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "null", "null", "null", "null", "null", "null"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        adTable.setColumnSelectionAllowed(true);
        adTable.setSelectionForeground(new java.awt.Color(255, 255, 204));
        jScrollPane3.setViewportView(adTable);
        adTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (adTable.getColumnModel().getColumnCount() > 0) {
            adTable.getColumnModel().getColumn(0).setResizable(false);
            adTable.getColumnModel().getColumn(1).setResizable(false);
            adTable.getColumnModel().getColumn(2).setResizable(false);
            adTable.getColumnModel().getColumn(3).setResizable(false);
            adTable.getColumnModel().getColumn(4).setResizable(false);
            adTable.getColumnModel().getColumn(5).setResizable(false);
        }

        pidTT.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        pidTT.setText("Property ID:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setText("Username:");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setText("Password:");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel7.setText("Credit Card Number:");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setText("Pin Code:");

        usernameT.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        ccnT.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        pidT.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        pidT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pidTActionPerformed(evt);
            }
        });

        pinT.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        pinT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pinTActionPerformed(evt);
            }
        });

        passwordT.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        passwordT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordTActionPerformed(evt);
            }
        });

        bookT.setBackground(new java.awt.Color(204, 255, 204));
        bookT.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        bookT.setText("BOOK");
        bookT.setAutoscrolls(true);
        bookT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookTActionPerformed(evt);
            }
        });

        typeT.setBackground(new java.awt.Color(255, 255, 204));
        typeT.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        typeT.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Type:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(pidTT, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pidT, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(typeT, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(bookT, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(usernameT)
                            .addComponent(ccnT, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                            .addComponent(passwordT)
                            .addComponent(pinT))))
                .addContainerGap(124, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pidTT, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pidT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(usernameT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(passwordT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(ccnT))
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(pinT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(typeT, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(bookT, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
        );

        pTable.setAutoCreateRowSorter(true);
        pTable.setBackground(new java.awt.Color(255, 255, 204));
        pTable.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        pTable.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        pTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "null", "null", "null", "null", "null", "null"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        pTable.setSelectionForeground(new java.awt.Color(255, 255, 204));
        jScrollPane4.setViewportView(pTable);
        pTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (pTable.getColumnModel().getColumnCount() > 0) {
            pTable.getColumnModel().getColumn(0).setResizable(false);
            pTable.getColumnModel().getColumn(1).setResizable(false);
            pTable.getColumnModel().getColumn(2).setResizable(false);
            pTable.getColumnModel().getColumn(3).setResizable(false);
            pTable.getColumnModel().getColumn(4).setResizable(false);
            pTable.getColumnModel().getColumn(5).setResizable(false);
        }

        locT.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        locT.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        locT.setText("Location:");

        prT.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        prT.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        prT.setText("Price:");

        adT.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        adT.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        adT.setText("Advertise No:");

        locationT.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        locationT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locationTActionPerformed(evt);
            }
        });

        sizeT.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        sizeT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sizeTActionPerformed(evt);
            }
        });

        priceT.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        priceT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceTActionPerformed(evt);
            }
        });

        processT.setBackground(new java.awt.Color(204, 255, 204));
        processT.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        processT.setText("Process");
        processT.setAutoscrolls(true);
        processT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processTActionPerformed(evt);
            }
        });

        ptypeT.setBackground(new java.awt.Color(255, 153, 153));
        ptypeT.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ptypeT.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ptypeT.setMinimumSize(new java.awt.Dimension(40, 40));
        ptypeT.setPreferredSize(new java.awt.Dimension(40, 50));
        ptypeT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ptypeTMouseClicked(evt);
            }
        });
        ptypeT.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ptypeTItemStateChanged(evt);
            }
        });
        ptypeT.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                ptypeTPropertyChange(evt);
            }
        });

        szT.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        szT.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        szT.setText("Size:");

        adnT.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        adnT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adnTActionPerformed(evt);
            }
        });

        frentT.setText("For rent");

        fsoldT.setText("For Sell");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(prT, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(locT, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(szT, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adT, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(locationT, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(priceT, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(sizeT, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(adnT, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(processT, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ptypeT, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(frentT)
                        .addGap(18, 18, 18)
                        .addComponent(fsoldT)))
                .addGap(187, 187, 187))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(ptypeT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(frentT)
                    .addComponent(fsoldT))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(locT, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(locationT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prT, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(priceT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sizeT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(szT, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adT, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adnT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(processT, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel2.setText("Advertised Properties");

        jLabel9.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel9.setText("Available Properties");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(262, 262, 262))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void pinTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pinTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pinTActionPerformed
    
    private void passwordTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordTActionPerformed
    
    private void bookTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookTActionPerformed
        try {
            con=Real_State_user.dbConnection();
            st=con.createStatement();
            String pids=pidT.getText();
            int pid=0;
            String username=usernameT.getText();
            String pass=passwordT.getText();
            String type=typeT.getSelectedItem();
            String ccn=ccnT.getText();
            String pin=pinT.getText();
            if(pids.matches("[0-9]+")){//must be integer value 
                pid=Integer.parseInt(pids);
            
            String query="select User_id from user where User_name=\""+username+"\" AND password=\""+pass+"\"";
            rst=st.executeQuery(query);
            if(!rst.next()){
                JOptionPane.showMessageDialog(null,"Wrong username or password" );
            }
            else{
                String uid=rst.getString("User_id");
                //update book table in the database
                query= "INSERT INTO book(User_id, P_id, CCN, pin) VALUES ("+uid+","+Integer.toString(pid)+",\'"+ccn+"\',\'"+pin+"\')";
                int r=st.executeUpdate(query);
                if(r==1)
                {
                    
                    String status="";
                    if(type=="buy")
                        status= "Sold";
                    else
                        status= "In rent";
                    //update status in the status column of property
                    query="update property set status=\'"+status+"\' where P_id=\""+pid+"\"";
                    st.executeUpdate(query);
                    fetch();
                    JOptionPane.showMessageDialog(null,type+" successful" );
                }
                else
                    JOptionPane.showMessageDialog(null," wrong property id." );
            }
            }
            
        } catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(null,"Some value may be wrong." );
            Logger.getLogger(FrontPage.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
            try {
                rst.close();
                st.close();
                pst.close();
            } catch (SQLException ex) {
                Logger.getLogger(FrontPage.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                con.close();
            } catch (SQLException ex) {
                Logger.getLogger(FrontPage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_bookTActionPerformed
    
    private void pidTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pidTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pidTActionPerformed
    
    private void locationTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locationTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_locationTActionPerformed
    
    private void sizeTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sizeTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sizeTActionPerformed
    
    private void priceTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceTActionPerformed
    //if advertisement exists
    private boolean isExist(String aid,Connection con) throws SQLException, ClassNotFoundException{
        
        String query="select user_id from advertisement where advertisement_id="+aid;
        st=con.createStatement();
        rst=st.executeQuery(query);
        return rst.next();
        
        
    } 
    private void processTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processTActionPerformed
        try {
            // TODO add your handling code here:
            con=Real_State_user.dbConnection();
            st=con.createStatement();
            String process=ptypeT.getSelectedItem();
            String loc=locationT.getText();
            String size=sizeT.getText();
            String price=priceT.getText();
            String adN=adnT.getText();
            int pid=0;
            int aid=0;
            if(process=="Post Advertisement"){
                
                String status=null;
                //if both rent and sold is selected
                if(frentT.isSelected() & fsoldT.isSelected()){
                    status="For sale or rent";
                    
                }
                else if(frentT.isSelected()){
                    status="For rent";
                }
                else if(fsoldT.isSelected()){
                    status="For Sale";
                }
                else{
                    JOptionPane.showMessageDialog(null,"Please select any option above");
                }
                
                
                String postq="insert into property(location, price, size,status) VALUES(?,?,?,?)";
                pst=con.prepareStatement(postq,Statement.RETURN_GENERATED_KEYS);//get autogenerate keys
                pst.setString(1, loc);
                pst.setInt(2,Integer.parseInt(price));
                pst.setInt(3,Integer.parseInt(size));
                pst.setString(4,status);
                int r=pst.executeUpdate();
                if(r==1)
                {
                    rst=pst.getGeneratedKeys();
                    if(rst.next())
                    {
                        pid=rst.getInt(1);//
                    }
                }
                postq="insert into advertisement(user_id,p_id) VALUES(?,?)";//update user and property id in advertisement table
                pst=con.prepareStatement(postq,Statement.RETURN_GENERATED_KEYS);
                pst.setInt(1,Integer.parseInt(userID));
                pst.setInt(2, pid);
                r=pst.executeUpdate();
                if(r==1)
                {
                    rst=pst.getGeneratedKeys();
                    if(rst.next())
                    {
                        aid=rst.getInt(1);
                    }
                }
            }
            else if( isExist(adN,con)){
                if(process=="Remove Advertisement"){
                    //delete property by matching the advertisement number.
                    String removeq="DELETE  FROM property where p_id=(select p_id from advertisement where Advertisement_id="+adN+")";
                    pst=con.prepareStatement(removeq);
                    int r=pst.executeUpdate();
                    
                }
                else{
                    String upq="";
                    int r=0;
                    String status=null;
                    if(frentT.isSelected() & fsoldT.isSelected()){
                        status="For rent";
                        
                    }
                    else if(frentT.isSelected()){
                        status="For rent";
                    }
                    else if(fsoldT.isSelected()){
                        status="For Sold";
                    }
                    else{
                        status="For sold or rent";
                    }
                    upq="UPDATE property set status=? where p_id=(select p_id from advertisement where Advertisement_id="+adN+")";
                    pst=con.prepareStatement(upq);
                    pst.setString(1, status);
                    r=pst.executeUpdate();
                    if(loc!="") {
                        
                        upq="UPDATE property set location=? where p_id=(select p_id from advertisement where Advertisement_id="+adN+")";
                        pst=con.prepareStatement(upq);
                        pst.setString(1, loc);
                        r=pst.executeUpdate();
                        
                    }
                    if(size!=""){
                        upq="UPDATE property set size=? where  p_id=(select p_id from advertisement where Advertisement_id="+adN+")";
                        pst=con.prepareStatement(upq);
                        pst.setInt(1,Integer.parseInt(size));
                        r=pst.executeUpdate();
                        
                    }
                    if(price!=""){
                        upq="UPDATE property set price=? where  p_id=(select p_id from advertisement where Advertisement_id="+adN+")";
                        pst=con.prepareStatement(upq);
                        pst.setInt(1, Integer.parseInt(price));
                        r=pst.executeUpdate();
                        
                    }
                    
                }
            }
            
            locationT.setText("");
            priceT.setText("");
            adnT.setText("");
            sizeT.setText("");
            
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(FrontPage.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null," Something wrong." );
            
        }finally{
            try {
                fetch();
                pst.close();
                st.close();
                con.close();
            } catch (SQLException ex) {
                Logger.getLogger(FrontPage.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }//GEN-LAST:event_processTActionPerformed
    
    private void adnTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adnTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_adnTActionPerformed
    
    private void ptypeTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ptypeTMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ptypeTMouseClicked
    
    private void ptypeTPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_ptypeTPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_ptypeTPropertyChange
    //visibilty of the form if the condition is matched.
    private void ptypeTItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ptypeTItemStateChanged
        String process=ptypeT.getSelectedItem();
        if(process=="Post Advertisement"){
            locT.setVisible(true);
            locationT.setVisible(true);
            szT.setVisible(true);
            sizeT.setVisible(true);
            prT.setVisible(true);
            priceT.setVisible(true);
            adT.setVisible(false);
            adnT.setVisible(false);
            frentT.setVisible(true);
            fsoldT.setVisible(true);
        }
        else if(process=="Update Information"){
            locT.setVisible(true);
            locationT.setVisible(true);
            szT.setVisible(true);
            sizeT.setVisible(true);
            prT.setVisible(true);
            priceT.setVisible(true);
            adT.setVisible(true);
            adnT.setVisible(true);
            frentT.setVisible(false);
            fsoldT.setVisible(false);
            
        }
        else{
            locT.setVisible(false);
            locationT.setVisible(false);
            szT.setVisible(false);
            sizeT.setVisible(false);
            prT.setVisible(false);
            priceT.setVisible(false);
            adT.setVisible(true);
            adnT.setVisible(true);
            frentT.setVisible(false);
            fsoldT.setVisible(false);
        }         // TODO add your handling code here:
    }//GEN-LAST:event_ptypeTItemStateChanged
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
        * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
        */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrontPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new FrontPage().setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(FrontPage.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel adT;
    private javax.swing.JTable adTable;
    private javax.swing.JTextField adnT;
    private javax.swing.JButton bookT;
    private javax.swing.JTextField ccnT;
    private javax.swing.JCheckBox frentT;
    private javax.swing.JCheckBox fsoldT;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel locT;
    private javax.swing.JTextField locationT;
    private javax.swing.JTable pTable;
    private javax.swing.JPasswordField passwordT;
    private javax.swing.JTextField pidT;
    private javax.swing.JLabel pidTT;
    private javax.swing.JPasswordField pinT;
    private javax.swing.JLabel prT;
    private javax.swing.JTextField priceT;
    private javax.swing.JButton processT;
    private java.awt.Choice ptypeT;
    private javax.swing.JTextField sizeT;
    private javax.swing.JLabel szT;
    private java.awt.Choice typeT;
    private java.awt.Label userT;
    private java.awt.Label useriT;
    private javax.swing.JTextField usernameT;
    // End of variables declaration//GEN-END:variables
}
